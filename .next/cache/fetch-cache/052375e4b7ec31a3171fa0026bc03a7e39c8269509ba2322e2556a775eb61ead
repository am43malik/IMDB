{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","cache-control":"public, max-age=86400","cf-cache-status":"MISS","cf-ray":"83d346043fa28950-SIN","connection":"keep-alive","content-encoding":"gzip","content-type":"text/html; charset=utf-8","date":"Fri, 29 Dec 2023 16:03:31 GMT","expires":"Fri, 29 Dec 2023 16:49:41 GMT","last-modified":"Fri, 29 Dec 2023 15:49:41 GMT","server":"cloudflare","transfer-encoding":"chunked","vary":"*, Accept-Encoding","x-aspnet-version":"4.0.30319","x-powered-by":"ASP.NET"},"body":"","status":200,"url":"http://www.omdbapi.com/"},"revalidate":31536000,"tags":[]}